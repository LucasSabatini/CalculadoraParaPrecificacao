openapi: 3.0.1
info:
  title: Calculadora para a Precificação de Produtos e de Gastos com Matérias-Primas
  description: O projeto é uma API desenvolvida com o objetivo de fornecer uma interface para o cálculo realizado na precificação de produtos para posterior venda e para o cálculo de gastos com as matérias-primas utilizadas em seus produtos.
  license:
    name: GPL-3.0
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
tags:
  - name: Matéria-Prima
    description: Endpoints para Gerenciamento de Matérias-primas
  - name: Usuário
    description: Endpoints para Gerenciamento de Usuários
  - name: Security
    description: Endpoints para Registro e Autenticação
paths:
  /api/user/{id}:
    get:
      tags:
        - Usuário
      summary: Obter usuário
      description: Obter usuário por ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    put:
      tags:
        - Usuário
      summary: Atualiza um usuário
      description: Atualiza um usuário passando uma representação em JSON, XML ou YML da entidade UserRequestDTO
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    delete:
      tags:
        - Usuário
      summary: Deleta um usuário
      description: Deleta um usuário através do ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/materiaprima/{id}:
    get:
      tags:
        - Matéria-Prima
      summary: Obter matéria-prima por ID
      description: Obter matéria-prima por ID
      operationId: getRawMaterialById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    put:
      tags:
        - Matéria-Prima
      summary: Atualiza uma matéria-prima
      description: Atualiza uma matéria-prima passando uma representação em JSON, XML ou YML da entidade RawMaterialRequestDTO
      operationId: updateRawMaterial
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    delete:
      tags:
        - Matéria-Prima
      summary: Deleta uma matéria-prima
      description: Deleta uma matéria-prima por ID
      operationId: deleteRawMaterial
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/materiaprima:
    get:
      tags:
        - Matéria-Prima
      summary: Obter todas as matérias-primas do usuário autenticado
      description: Obter todas as matérias-primas do usuário autenticado
      operationId: getAllRawMaterialsOfUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    post:
      tags:
        - Matéria-Prima
      summary: Adiciona uma matéria-prima
      description: Adiciona uma matéria-prima passando uma representação em JSON, XML ou YML da entidade RawMaterialRequestDTO
      operationId: addRawMaterial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RawMaterialRequestDTO'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RawMaterialResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/auth/register:
    post:
      tags:
        - Security
      summary: Registra um usuário
      description: Registra um usuário passando uma representação em JSON, XML ou YML da entidade RegisterRequest
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/auth/authenticate:
    post:
      tags:
        - Security
      summary: Autentica um usuário
      description: Autentica um usuário passando seu email e senha em JSON, XML ou YML
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/user:
    get:
      tags:
        - Usuário
      summary: Obter usuários
      description: Obter todos os usuários
      operationId: getAllUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /api/materiaprima/all:
    get:
      tags:
        - Matéria-Prima
      summary: Obter todas as matérias-primas
      description: Obter todas as matérias-primas
      operationId: getAllRawMaterials
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawMaterialResponseDTO'
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '409':
          description: Conflict
          content: {}
        '422':
          description: Unprocessable Entity
          content: {}
        '500':
          description: Internal Server Error
          content: {}
components:
  schemas:
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RawMaterial:
      required:
        - nameRawMaterial
      type: object
      properties:
        id:
          type: integer
          format: int64
        nameRawMaterial:
          maxLength: 40
          minLength: 2
          type: string
        pricePaid:
          type: number
        weightUsedInRecipe:
          type: number
        weightPurchased:
          type: number
        finalCost:
          type: number
    UserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        rawMaterials:
          type: array
          items:
            $ref: '#/components/schemas/RawMaterial'
        _links:
          $ref: '#/components/schemas/Links'
    UserRequestDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    RawMaterialResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nameRawMaterial:
          type: string
        pricePaid:
          type: number
        weightUsedInRecipe:
          type: number
        weightPurchased:
          type: number
        finalCost:
          type: number
        user_id:
          type: integer
          format: int64
    RawMaterialRequestDTO:
      type: object
      properties:
        nameRawMaterial:
          type: string
        pricePaid:
          type: number
        weightUsedInRecipe:
          type: number
        weightPurchased:
          type: number
    RegisterRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
